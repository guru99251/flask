@import url("https://fonts.googleapis.com/css2?family=Urbanist:wght@400;600;800&display=swap");

:root {
    --gray-light: #f9f9f9;
    --gray-dark: #1d1d1d;
    --black: #000;
    --white: #fff;
    --font-family: 'Urbanist', sans-serif;
    
    /* Custom Cubic Bezier Curves for Natural Motion */
    --ease-out-soft: cubic-bezier(0.34, 1.56, 0.64, 1);
    --ease-out-elastic: cubic-bezier(0.68, -0.6, 0.32, 1.6);
    --ease-smooth: cubic-bezier(0.45, 0, 0.55, 1);
    --bounce-out: cubic-bezier(0.34, 1.56, 0.64, 1);
    
    /* Animation Durations */
    --duration-fast: 0.3s;
    --duration-base: 0.5s;
    --duration-slow-table: 0.05s;
    --duration-slow-title: 0.8s;
    
    /* Spring Physics Constants */
    --spring-tension: 200;
    --spring-friction: 20;
}

body {
    font-family: var(--font-family);
    background-color: var(--gray-light);
    color: var(--gray-dark);
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 80vh; /* 100% -> 80% */
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 24px; /* 30px -> 24px */
    width: 100%; /* 100% -> 80% */
}

.card-row {
    display: flex;
    gap: 24px; /* 30px -> 24px */
    justify-content: center;
    flex-wrap: wrap;
    width: 80%; /* 100% -> 80% */
}

.card {
    background: var(--white);
    border-radius: 8px; /* 10px -> 8px */
    padding: 16px; /* 20px -> 16px */
    width: 240px; /* 300px -> 240px */
    position: relative;
    border: 3.2px solid var(--black); /* 4px -> 3.2px */
    box-shadow: 3.2px 3.2px 0 var(--black); /* 4px -> 3.2px */
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.card:hover {
    transform: translate(-3.2px, -3.2px); /* 4px -> 3.2px */
    box-shadow: 6.4px 6.4px 0 var(--black); /* 8px -> 6.4px */
}

.card h3 {
    font-size: 1.12rem; /* 1.4rem -> 1.12rem */
    margin-bottom: 8px; /* 10px -> 8px */
    color: var(--gray-dark);
    text-align: center;
    text-transform: uppercase;
    width: 100%;
}

.card input {
    width: calc(80% - 16px); /* Adjusted for scaling */
    padding: 8px; /* 10px -> 8px */
    margin: 8px 0; /* 10px -> 8px */
    font-size: 0.8rem; /* 1rem -> 0.8rem */
    border: 2.4px solid var(--black); /* 3px -> 2.4px */
    border-radius: 4px; /* 5px -> 4px */
    background-color: var(--gray-light);
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    box-sizing: border-box;
}

.card input:focus {
    border-color: var(--gray-dark);
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.3); /* Reduced size */
}

.form-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 80%;
}

button {
    margin-top: 16px; /* 20px -> 16px */
    padding: 12px 24px; /* 15px 30px -> 12px 24px */
    font-size: 0.96rem; /* 1.2rem -> 0.96rem */
    background-color: var(--black);
    color: var(--white);
    border: 3.2px solid var(--black); /* 4px -> 3.2px */
    border-radius: 8px; /* 10px -> 8px */
    cursor: pointer;
    font-weight: bold;
    text-transform: uppercase;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

button:hover {
    background-color: var(--gray-dark);
    transform: scale(1.04); /* Slightly reduced scaling */
}

button:active {
    background-color: var(--gray-light);
    color: var(--black);
}

.result-container {
    text-align: center;
    width: 80%; /* 크기 80%로 줄임 */
    margin: auto;
}

.result-title {
    font-size: 2rem;
    font-weight: 800;
    margin-bottom: 16px;
    text-transform: uppercase;
    color: var(--gray-dark);
    padding-bottom: 8px;
    display: inline-block;
    position: relative;
    animation: fluidReveal var(--duration-slow-title) var(--ease-out-soft);
    white-space: nowrap;
    animation-delay: 0s; /* Simultaneous start */
}

.result-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3.2px;
    background-color: var(--black);
    transform-origin: left;
    animation: elasticExpand var(--duration-base) var(--ease-out-elastic) forwards;
    animation-delay: var(--duration-fast);
}

/**
 .result-title {
    font-size: 2rem; 원본 크기에서 80% 적용
    font-weight: 800;
    margin-bottom: 16px;
    text-transform: uppercase;
    color: #000;
    border-bottom: 3.2px solid #000;
    display: inline-block;
    padding-bottom: 8px;
}

.result-table {
    width: 80%; 크기 80%로 유지 
    border-collapse: collapse;
    margin: 20px auto; auto를 사용해 수평 중앙 정렬 
    font-size: 1rem; 폰트 크기 유지 
    text-align: center;
} 
**/

.result-table {
    width: 100%;
    border-collapse: collapse;
    font-size: 1rem;
    text-align: center;
}

.result-table-container {
    width: 80%;
    margin: 20px auto;
    transform-origin: left;
    opacity: 0;
    position: relative;
    animation: elasticExpand var(--duration-slow-table) var(--ease-out-elastic) forwards;
    animation-delay: calc(var(--duration-fast) * 2);
}

.result-table td {
    transition: transform var(--duration-fast) var(--ease-smooth);
}

.result-table td:hover {
    transform: scale(1.02);
    background-color: rgba(0, 0, 0, 0.01);
}

.result-table thead th {
    background-color: #000;
    color: #fff;
    padding: 8px; /* 크기 조정 */
    border: 3.2px solid #000;
    text-transform: uppercase;
    transform-origin: left;
    position: relative;
}

.result-table tbody td {
    padding: 8px;
    border: 3.2px solid #000;
    background-color: #fff;
    transform-origin: left;
    position: relative;
}

.result-table tbody tr {
    position: relative;
    opacity: 0;
    animation: floatIn var(--duration-base) var(--ease-smooth) forwards;
    transition: background-color 0.3s var(--ease-smooth);
    animation-delay: 0s; /* Simultaneous start */
}

.result-table tbody tr:hover {
    background-color: rgba(0, 0, 0, 0.02);
    transform: translateX(4px);
}

.back-button {
    display: inline-block;
    margin-top: 16px;
    padding: 8px 16px; /* 크기 조정 */
    font-size: 1rem;
    background-color: #000;
    color: #fff;
    text-decoration: none;
    border: 3.2px solid #000;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.back-button:hover {
    background-color: #fff;
    color: #000;
    transform: scale(1.04);
}

.result-footer {
    margin-top: auto; /* 남은 공간을 위로 밀어냄 */
    padding: 16px 8px; /* 여백 최소화 */
    font-size: 0.64rem; /* 크기 유지 */
    color: #888; /* 글자 색 유지 */
    text-align: center; /* 텍스트와 내용 중앙 정렬 */
    line-height: 1.6;
    position: absolute; /* 페이지에서 위치 고정 */
    bottom: 40px; /* 페이지 하단과의 거리 */
    width: 100%; /* 전체 너비로 확장 */
}

.guidance-box {
    display: inline-block;
    margin: 0 auto;
    text-align: left;
    padding: 16px;
    background-color: transparent;
    border: none;
    border-radius: 5px;
    border-top: 1px solid #ccc;
    transition: transform 0.5s ease, z-index 0.5s ease; /* Smooth animation */
    font-size: 0.64rem;
    position: relative; /* Needed for z-index manipulation */
    transform-origin: center; /* Scales from the center */
    z-index: 1; /* Default stack order */
}

.guidance-box:hover {
    transform: scale(1.2) translateY(-50%) translateZ(30px); /* Expand and move upward */
    z-index: 10; /* Bring to front */
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Emphasized shadow for depth */
}

.guidance-box p {
    margin: 0 0 8px 0;
    font-size: 0.72rem; /* 80% 크기로 조정 */
    font-weight: bold;
    color: #666;
}

.guidance-box ol {
    padding-left: 16px;
    margin: 0;
    color: #888;
}

.guidance-box ol li {
    margin-bottom: 6.4px;
    list-style-type: decimal;
}

.guidance-box ul {
    margin: 4px 0 8px 16px;
    padding-left: 16px;
    color: #888;
}

.guidance-box ul li {
    list-style-type: disc;
}

@keyframes titleSlideIn {
    from {
        clip-path: inset(0 100% 0 0);
        opacity: 0;
    }
    to {
        clip-path: inset(0 0 0 0);
        opacity: 1;
    }
}

@keyframes expandTable {
    from {
        transform: scaleX(0);
        opacity: 0;
    }
    to {
        transform: scaleX(1);
        opacity: 1;
    }
}

/* Fluid Motion System */
@keyframes fluidReveal {
    0% {
        clip-path: inset(0 100% 0 0);
        opacity: 0;
        transform: translateX(-10px);
    }
    30% {
        opacity: 1;
    }
    100% {
        clip-path: inset(0 0 0 0);
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes elasticExpand {
    0% {
        transform: scaleX(0);
        opacity: 0;
    }
    40% {
        transform: scaleX(1.02);
    }
    60% {
        transform: scaleX(0.98);
    }
    100% {
        transform: scaleX(1);
        opacity: 1;
    }
}

@keyframes floatIn {
    0% {
        transform: translateY(10px);
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}


.animate-title {
    animation: fadeIn 0.5s ease-out forwards;
}

.animate-row {
    animation: fadeIn 0.5s ease-out forwards;
}


/* Responsive Motion Adjustments */
@media (prefers-reduced-motion: reduce) {
    .result-title,
    .result-title::after,
    .result-table-container,
    .result-table tbody tr {
        animation: none;
        opacity: 1;
        transform: none;
    }
}

/* Touch Device Optimizations */
@media (hover: none) {
    .result-table tbody tr:hover,
    .result-table td:hover {
        transform: none;
        background-color: transparent;
    }
}

/* Staggered Row Animations */
.result-table tbody tr:nth-child(1) { animation-delay: calc(var(--duration-slow-table) + 0.1s); }
.result-table tbody tr:nth-child(2) { animation-delay: calc(var(--duration-slow-table) + 0.2s); }
.result-table tbody tr:nth-child(3) { animation-delay: calc(var(--duration-slow-table) + 0.3s); }
.result-table tbody tr:nth-child(4) { animation-delay: calc(var(--duration-slow-table) + 0.4s); }
